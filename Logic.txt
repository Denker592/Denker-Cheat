local Version = "5.23 beta"

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- Create main GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DenkerChetGUI"
ScreenGui.Parent = player.PlayerGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

-- Floating button (initially hidden)
local FloatingButton = Instance.new("ImageButton")
FloatingButton.Name = "FloatingButton"
FloatingButton.Size = UDim2.new(0, 50, 0, 50)
FloatingButton.Position = UDim2.new(0, 20, 0, 20)
FloatingButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
FloatingButton.BackgroundTransparency = 0.2
FloatingButton.Image = "rbxthumb://type=Asset&id=85901190532963&w=150&h=150"
FloatingButton.Visible = false
FloatingButton.ZIndex = 10
FloatingButton.Parent = ScreenGui

-- Round corners for floating button
local FloatingCorner = Instance.new("UICorner")
FloatingCorner.CornerRadius = UDim.new(0, 12)
FloatingCorner.Parent = FloatingButton

-- Stroke for floating button
local FloatingStroke = Instance.new("UIStroke")
FloatingStroke.Color = Color3.fromRGB(80, 80, 80)
FloatingStroke.Thickness = 2
FloatingStroke.Transparency = 0.3
FloatingStroke.Parent = FloatingButton

-- Shadow for floating button
local FloatingShadow = Instance.new("ImageLabel")
FloatingShadow.Name = "Shadow"
FloatingShadow.Size = UDim2.new(1, 15, 1, 15)
FloatingShadow.Position = UDim2.new(0, -7, 0, -7)
FloatingShadow.BackgroundTransparency = 1
FloatingShadow.Image = "rbxassetid://1316045217"
FloatingShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
FloatingShadow.ImageTransparency = 0.8
FloatingShadow.ScaleType = Enum.ScaleType.Slice
FloatingShadow.SliceCenter = Rect.new(10, 10, 118, 118)
FloatingShadow.ZIndex = 9
FloatingShadow.Parent = FloatingButton

-- Main frame with semi-transparent background
local MainFrame = Instance.new("ScrollingFrame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 300, 0, 500) -- Increased height for new button
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -250)
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.BackgroundTransparency = 0.3
MainFrame.BorderSizePixel = 0
MainFrame.ZIndex = 2
MainFrame.ScrollBarImageTransparency = 1
MainFrame.Parent = ScreenGui

-- [–û–°–¢–ê–õ–¨–ù–û–ô –ö–û–î –û–°–¢–ê–ï–¢–°–Ø –¢–ê–ö–ò–ú –ñ–ï –î–û –°–û–ó–î–ê–ù–ò–Ø –ö–ù–û–ü–û–ö...]

-- Function to create Map Settings button with dropdown
local function createMapSettingsButton(positionY)
	local buttonContainer, button, expandFrame, imageLabel = createExpandableButton("üó∫Ô∏è Map Settings", positionY)

	-- Map Transparency section
	local transparencyLabel = Instance.new("TextLabel")
	transparencyLabel.Size = UDim2.new(1, -10, 0, 20)
	transparencyLabel.Position = UDim2.new(0, 5, 0, 5)
	transparencyLabel.BackgroundTransparency = 1
	transparencyLabel.Text = "Map Transparency: 1.0"
	transparencyLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
	transparencyLabel.TextSize = 10
	transparencyLabel.Font = Enum.Font.Gotham
	transparencyLabel.TextXAlignment = Enum.TextXAlignment.Left
	transparencyLabel.ZIndex = 4
	transparencyLabel.Parent = expandFrame

	-- Transparency slider
	local transparencySliderBackground = Instance.new("Frame")
	transparencySliderBackground.Size = UDim2.new(1, -10, 0, 20)
	transparencySliderBackground.Position = UDim2.new(0, 5, 0, 30)
	transparencySliderBackground.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	transparencySliderBackground.BorderSizePixel = 0
	transparencySliderBackground.ZIndex = 4
	transparencySliderBackground.Parent = expandFrame

	local transparencySliderCorner = Instance.new("UICorner")
	transparencySliderCorner.CornerRadius = UDim.new(0, 4)
	transparencySliderCorner.Parent = transparencySliderBackground

	local transparencySliderFill = Instance.new("Frame")
	transparencySliderFill.Size = UDim2.new(1, 0, 1, 0)
	transparencySliderFill.Position = UDim2.new(0, 0, 0, 0)
	transparencySliderFill.BackgroundColor3 = Color3.fromRGB(255, 200, 100)
	transparencySliderFill.BorderSizePixel = 0
	transparencySliderFill.ZIndex = 5
	transparencySliderFill.Parent = transparencySliderBackground

	local transparencyFillCorner = Instance.new("UICorner")
	transparencyFillCorner.CornerRadius = UDim.new(0, 4)
	transparencyFillCorner.Parent = transparencySliderFill

	local transparencySliderButton = Instance.new("TextButton")
	transparencySliderButton.Size = UDim2.new(1, 0, 1, 0)
	transparencySliderButton.Position = UDim2.new(0, 0, 0, 0)
	transparencySliderButton.BackgroundTransparency = 1
	transparencySliderButton.Text = ""
	transparencySliderButton.ZIndex = 6
	transparencySliderButton.Parent = transparencySliderBackground

	-- Quick adjustment buttons for transparency
	local transparencyControls = Instance.new("Frame")
	transparencyControls.Size = UDim2.new(1, -10, 0, 15)
	transparencyControls.Position = UDim2.new(0, 5, 0, 55)
	transparencyControls.BackgroundTransparency = 1
	transparencyControls.ZIndex = 4
	transparencyControls.Parent = expandFrame

	local transparencyMinusButton = Instance.new("TextButton")
	transparencyMinusButton.Size = UDim2.new(0, 20, 1, 0)
	transparencyMinusButton.Position = UDim2.new(0, 0, 0, 0)
	transparencyMinusButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	transparencyMinusButton.BackgroundTransparency = 0.3
	transparencyMinusButton.Text = "-"
	transparencyMinusButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	transparencyMinusButton.TextSize = 12
	transparencyMinusButton.Font = Enum.Font.GothamBold
	transparencyMinusButton.ZIndex = 4
	transparencyMinusButton.Parent = transparencyControls

	local transparencyMinusCorner = Instance.new("UICorner")
	transparencyMinusCorner.CornerRadius = UDim.new(0, 3)
	transparencyMinusCorner.Parent = transparencyMinusButton

	local transparencyPlusButton = Instance.new("TextButton")
	transparencyPlusButton.Size = UDim2.new(0, 20, 1, 0)
	transparencyPlusButton.Position = UDim2.new(1, -20, 0, 0)
	transparencyPlusButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	transparencyPlusButton.BackgroundTransparency = 0.3
	transparencyPlusButton.Text = "+"
	transparencyPlusButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	transparencyPlusButton.TextSize = 12
	transparencyPlusButton.Font = Enum.Font.GothamBold
	transparencyPlusButton.ZIndex = 4
	transparencyPlusButton.Parent = transparencyControls

	local transparencyPlusCorner = Instance.new("UICorner")
	transparencyPlusCorner.CornerRadius = UDim.new(0, 3)
	transparencyPlusCorner.Parent = transparencyPlusButton

	-- Effects section
	local effectsLabel = Instance.new("TextLabel")
	effectsLabel.Size = UDim2.new(1, -10, 0, 20)
	effectsLabel.Position = UDim2.new(0, 5, 0, 75)
	effectsLabel.BackgroundTransparency = 1
	effectsLabel.Text = "Map Effects:"
	effectsLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
	effectsLabel.TextSize = 10
	effectsLabel.Font = Enum.Font.GothamBold
	effectsLabel.TextXAlignment = Enum.TextXAlignment.Left
	effectsLabel.ZIndex = 4
	effectsLabel.Parent = expandFrame

	-- Fire Effect Button
	local fireEffectButton = Instance.new("TextButton")
	fireEffectButton.Size = UDim2.new(1, -10, 0, 25)
	fireEffectButton.Position = UDim2.new(0, 5, 0, 100)
	fireEffectButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
	fireEffectButton.BackgroundTransparency = 0.2
	fireEffectButton.Text = "üî• Fire Effect"
	fireEffectButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	fireEffectButton.TextSize = 11
	fireEffectButton.Font = Enum.Font.Gotham
	fireEffectButton.ZIndex = 4
	fireEffectButton.Parent = expandFrame

	local fireEffectCorner = Instance.new("UICorner")
	fireEffectCorner.CornerRadius = UDim.new(0, 4)
	fireEffectCorner.Parent = fireEffectButton

	-- Sparkles Effect Button
	local sparklesEffectButton = Instance.new("TextButton")
	sparklesEffectButton.Size = UDim2.new(1, -10, 0, 25)
	sparklesEffectButton.Position = UDim2.new(0, 5, 0, 130)
	sparklesEffectButton.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
	sparklesEffectButton.BackgroundTransparency = 0.2
	sparklesEffectButton.Text = "‚ú® Sparkles Effect"
	sparklesEffectButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	sparklesEffectButton.TextSize = 11
	sparklesEffectButton.Font = Enum.Font.Gotham
	sparklesEffectButton.ZIndex = 4
	sparklesEffectButton.Parent = expandFrame

	local sparklesEffectCorner = Instance.new("UICorner")
	sparklesEffectCorner.CornerRadius = UDim.new(0, 4)
	sparklesEffectCorner.Parent = sparklesEffectButton

	-- Smoke Effect Button
	local smokeEffectButton = Instance.new("TextButton")
	smokeEffectButton.Size = UDim2.new(1, -10, 0, 25)
	smokeEffectButton.Position = UDim2.new(0, 5, 0, 160)
	smokeEffectButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
	smokeEffectButton.BackgroundTransparency = 0.2
	smokeEffectButton.Text = "üí® Smoke Effect"
	smokeEffectButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	smokeEffectButton.TextSize = 11
	smokeEffectButton.Font = Enum.Font.Gotham
	smokeEffectButton.ZIndex = 4
	smokeEffectButton.Parent = expandFrame

	local smokeEffectCorner = Instance.new("UICorner")
	smokeEffectCorner.CornerRadius = UDim.new(0, 4)
	smokeEffectCorner.Parent = smokeEffectButton

	-- Clear Effects Button
	local clearEffectsButton = Instance.new("TextButton")
	clearEffectsButton.Size = UDim2.new(1, -10, 0, 25)
	clearEffectsButton.Position = UDim2.new(0, 5, 0, 190)
	clearEffectsButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	clearEffectsButton.BackgroundTransparency = 0.2
	clearEffectsButton.Text = "‚ùå Clear All Effects"
	clearEffectsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	clearEffectsButton.TextSize = 11
	clearEffectsButton.Font = Enum.Font.Gotham
	clearEffectsButton.ZIndex = 4
	clearEffectsButton.Parent = expandFrame

	local clearEffectsCorner = Instance.new("UICorner")
	clearEffectsCorner.CornerRadius = UDim.new(0, 4)
	clearEffectsCorner.Parent = clearEffectsButton

	return buttonContainer, button, expandFrame, imageLabel, transparencyLabel, transparencySliderFill, transparencySliderButton, transparencyMinusButton, transparencyPlusButton, fireEffectButton, sparklesEffectButton, smokeEffectButton, clearEffectsButton
end

-- Create buttons (–¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É Map Settings)
local FlyButtonContainer, FlyButton, FlyExpandFrame, FlyImageLabel, FlyToggleButton, FlyStatusLabel, FlySpeedLabel, FlySpeedSliderFill, FlySpeedSliderButton, FlySpeedMinusButton, FlySpeedPlusButton = createFlyButton(0)
local ESPButtonContainer, ESPButton = createSimpleButton("üéØ ESP: Disabled", 45)
local NoclipButtonContainer, NoclipButton = createSimpleButton("üö´ Noclip: Disabled", 90)
local SpeedButtonContainer, SpeedButton, SpeedExpandFrame, SpeedImageLabel, SpeedLabel, SpeedSliderFill, SpeedSliderButton, SpeedMinusButton, SpeedPlusButton = createWalkSpeedButton(135)
local JumpButtonContainer, JumpButton, JumpExpandFrame, JumpImageLabel, JumpLabel, JumpSliderFill, JumpSliderButton, JumpMinusButton, JumpPlusButton = createJumpPowerButton(180)
local MapButtonContainer, MapButton, MapExpandFrame, MapImageLabel, MapTransparencyLabel, MapTransparencySliderFill, MapTransparencySliderButton, MapTransparencyMinusButton, MapTransparencyPlusButton, FireEffectButton, SparklesEffectButton, SmokeEffectButton, ClearEffectsButton = createMapSettingsButton(225)

-- Variables for map settings
local mapExpanded = false
local currentTransparency = 1.0
local activeEffects = {}

-- [–û–°–¢–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–°–¢–ê–Æ–¢–°–Ø –¢–ê–ö–ò–ú–ò –ñ–ï...]

-- Function to update button positions (–¥–æ–±–∞–≤–ª—è–µ–º Map Settings)
local function updateButtonPositions()
	local currentY = 0

	-- Fly button
	FlyButtonContainer.Position = UDim2.new(0, 0, 0, currentY)
	currentY = currentY + 40

	-- If Fly expanded, add its height
	if flyExpanded then
		currentY = currentY + 110 + 5
	else
		currentY = currentY + 5
	end

	-- ESP button
	ESPButtonContainer.Position = UDim2.new(0, 0, 0, currentY)
	currentY = currentY + 40 + 5

	-- Noclip button
	NoclipButtonContainer.Position = UDim2.new(0, 0, 0, currentY)
	currentY = currentY + 40 + 5

	-- Speed button
	SpeedButtonContainer.Position = UDim2.new(0, 0, 0, currentY)
	currentY = currentY + 40

	-- If Speed expanded, add its height
	if speedExpanded then
		currentY = currentY + 80 + 5
	else
		currentY = currentY + 5
	end

	-- Jump button
	JumpButtonContainer.Position = UDim2.new(0, 0, 0, currentY)
	currentY = currentY + 40

	-- If Jump expanded, add its height
	if jumpExpanded then
		currentY = currentY + 80 + 5
	else
		currentY = currentY + 5
	end

	-- Map Settings button
	MapButtonContainer.Position = UDim2.new(0, 0, 0, currentY)
	currentY = currentY + 40

	-- If Map expanded, add its height
	if mapExpanded then
		currentY = currentY + 220 + 5
	else
		currentY = currentY + 5
	end

	-- Update content size
	updateContentSize()
end

-- Function for Map Settings expand/collapse animation
local function toggleMapExpand()
	safeAnimateButton(MapButton)

	if mapExpanded then
		-- Collapse
		animateIcon(MapImageLabel, false)

		local tween = TweenService:Create(MapExpandFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Size = UDim2.new(1, 0, 0, 0)
		})
		tween:Play()

		tween.Completed:Connect(function()
			MapExpandFrame.Visible = false
			mapExpanded = false
			updateButtonPositions()
		end)
	else
		-- Expand
		MapExpandFrame.Visible = true
		animateIcon(MapImageLabel, true)

		local tween = TweenService:Create(MapExpandFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Size = UDim2.new(1, 0, 0, 220)
		})
		tween:Play()

		tween.Completed:Connect(function()
			mapExpanded = true
			updateButtonPositions()
		end)
	end
end

-- Function to update map transparency
local function updateMapTransparency(newTransparency)
	currentTransparency = math.clamp(newTransparency, 0, 1)
	
	-- Update text with 2 decimal places
	MapTransparencyLabel.Text = "Map Transparency: " .. string.format("%.2f", currentTransparency)

	-- Update slider position (0% to 100%)
	local fillPercentage = currentTransparency

	-- Animate slider update
	local tween = TweenService:Create(MapTransparencySliderFill, TweenInfo.new(0.2), {
		Size = UDim2.new(fillPercentage, 0, 1, 0)
	})
	tween:Play()

	-- Apply transparency to all parts in workspace except those with Humanoid
	for _, obj in pairs(Workspace:GetDescendants()) do
		if obj:IsA("BasePart") then
			-- Check if the part belongs to a character (has Humanoid in parent)
			local hasHumanoid = false
			local parent = obj.Parent
			while parent do
				if parent:FindFirstChildOfClass("Humanoid") then
					hasHumanoid = true
					break
				end
				parent = parent.Parent
			end
			
			-- Only apply transparency to non-character parts
			if not hasHumanoid then
				obj.LocalTransparencyModifier = 1 - currentTransparency
			end
		elseif obj:IsA("Texture") or obj:IsA("Decal") then
			-- Apply transparency to textures and decals
			obj.Transparency = 1 - currentTransparency
		end
	end
end

-- Function to create fire effect
local function createFireEffect()
	clearAllEffects() -- Clear previous effects
	
	local fireColor = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
		ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 150, 0)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 0))
	})
	
	for _, obj in pairs(Workspace:GetDescendants()) do
		if obj:IsA("BasePart") and not obj.Parent:FindFirstChildOfClass("Humanoid") then
			local fire = Instance.new("Fire")
			fire.Name = "MapEffect_Fire"
			fire.Color = fireColor
			fire.SecondaryColor = Color3.fromRGB(255, 100, 0)
			fire.Size = math.min(obj.Size.Magnitude * 0.5, 10)
			fire.Heat = 15
			fire.Parent = obj
			
			table.insert(activeEffects, fire)
		end
	end
end

-- Function to create sparkles effect
local function createSparklesEffect()
	clearAllEffects() -- Clear previous effects
	
	for _, obj in pairs(Workspace:GetDescendants()) do
		if obj:IsA("BasePart") and not obj.Parent:FindFirstChildOfClass("Humanoid") then
			local sparkles = Instance.new("Sparkles")
			sparkles.Name = "MapEffect_Sparkles"
			sparkles.SparkleColor = Color3.fromRGB(100, 200, 255)
			sparkles.Parent = obj
			
			table.insert(activeEffects, sparkles)
		end
	end
end

-- Function to create smoke effect
local function createSmokeEffect()
	clearAllEffects() -- Clear previous effects
	
	for _, obj in pairs(Workspace:GetDescendants()) do
		if obj:IsA("BasePart") and not obj.Parent:FindFirstChildOfClass("Humanoid") then
			local smoke = Instance.new("Smoke")
			smoke.Name = "MapEffect_Smoke"
			smoke.Color = Color3.fromRGB(200, 200, 200)
			smoke.Size = math.min(obj.Size.Magnitude * 0.3, 8)
			smoke.RiseVelocity = 5
			smoke.Opacity = 0.5
			smoke.Parent = obj
			
			table.insert(activeEffects, smoke)
		end
	end
end

-- Function to clear all effects
local function clearAllEffects()
	for _, effect in pairs(activeEffects) do
		if effect and effect.Parent then
			effect:Destroy()
		end
	end
	activeEffects = {}
end

-- Map Transparency Slider Function
local function setupMapTransparencySlider()
	local dragging = false

	MapTransparencySliderButton.MouseButton1Down:Connect(function()
		dragging = true
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local sliderAbsolutePosition = MapTransparencySliderButton.AbsolutePosition.X
			local sliderAbsoluteSize = MapTransparencySliderButton.AbsoluteSize.X
			local mouseX = input.Position.X
			
			local relativeX = math.clamp(mouseX - sliderAbsolutePosition, 0, sliderAbsoluteSize)
			local percentage = relativeX / sliderAbsoluteSize
			
			local newTransparency = math.floor(percentage * 100) / 100 -- 0.01 increments
			updateMapTransparency(newTransparency)
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Plus/Minus button functionality
	MapTransparencyPlusButton.MouseButton1Click:Connect(function()
		safeAnimateButton(MapTransparencyPlusButton)
		updateMapTransparency(currentTransparency + 0.01)
	end)

	MapTransparencyMinusButton.MouseButton1Click:Connect(function()
		safeAnimateButton(MapTransparencyMinusButton)
		updateMapTransparency(currentTransparency - 0.01)
	end)
end

-- [–í –û–°–ù–û–í–ù–û–ô –ß–ê–°–¢–ò –ö–û–î–ê –î–û–ë–ê–í–õ–Ø–ï–ú –ù–û–í–´–ï –ö–ù–û–ü–ö–ò –í –ù–ê–°–¢–†–û–ô–ö–ò]

-- Set up all buttons (–¥–æ–±–∞–≤–ª—è–µ–º Map Settings)
setupButton(FlyButton, toggleFlyExpand)
setupButton(FlyToggleButton, toggleFly)
setupButton(ESPButton, toggleESP)
setupButton(NoclipButton, toggleNoclip)
setupButton(SpeedButton, toggleSpeedExpand)
setupButton(JumpButton, toggleJumpExpand)
setupButton(MapButton, toggleMapExpand)
setupButton(MinimizeButton, minimizeWindow)

-- Map Effects buttons
setupButton(FireEffectButton, createFireEffect)
setupButton(SparklesEffectButton, createSparklesEffect)
setupButton(SmokeEffectButton, createSmokeEffect)
setupButton(ClearEffectsButton, clearAllEffects)

-- [–û–°–¢–ê–õ–¨–ù–û–ô –ö–û–î –û–°–¢–ê–ï–¢–°–Ø –¢–ê–ö–ò–ú –ñ–ï...]

-- Apply hover effects (–¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏)
setupDarkGrayHoverEffects(FlyButton)
setupDarkGrayHoverEffects(CloseButton)
setupDarkGrayHoverEffects(MinimizeButton)
setupDarkGrayHoverEffects(FlyToggleButton)
setupDarkGrayHoverEffects(ESPButton)
setupDarkGrayHoverEffects(NoclipButton)
setupDarkGrayHoverEffects(SpeedButton)
setupDarkGrayHoverEffects(JumpButton)
setupDarkGrayHoverEffects(MapButton)
setupDarkGrayHoverEffects(FloatingButton)
setupDarkGrayHoverEffects(FireEffectButton)
setupDarkGrayHoverEffects(SparklesEffectButton)
setupDarkGrayHoverEffects(SmokeEffectButton)
setupDarkGrayHoverEffects(ClearEffectsButton)

-- Set up window dragging and sliders (–¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–ª–∞–π–¥–µ—Ä)
setupWindowDrag()
setupFloatingButtonDrag()
setupFlySpeedSlider()
setupWalkSpeedSlider()
setupJumpPowerSlider()
setupMapTransparencySlider() -- –ù–æ–≤—ã–π —Å–ª–∞–π–¥–µ—Ä –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏

-- Initialize speeds and statuses (–¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏)
updateFlySpeed(1)
updateWalkSpeed(16)
updateJumpPower(50)
updateMapTransparency(1.0) -- –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
updateNoclipStatus()
