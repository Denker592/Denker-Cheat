local Version = "5.23 beta"

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

-- Create main GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DenkerChetGUI"
ScreenGui.Parent = player.PlayerGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

-- Main frame with semi-transparent background
local MainFrame = Instance.new("ScrollingFrame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 300, 0, 250)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -125)
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.BackgroundTransparency = 0.3
MainFrame.BorderSizePixel = 0
MainFrame.ZIndex = 2
MainFrame.ScrollBarImageTransparency = 1
MainFrame.Parent = ScreenGui

-- Round corners
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

-- Window shadow
local ShadowEffect = Instance.new("ImageLabel")
ShadowEffect.Name = "Shadow"
ShadowEffect.Size = UDim2.new(1, 20, 1, 20)
ShadowEffect.Position = UDim2.new(0, -10, 0, -10)
ShadowEffect.BackgroundTransparency = 1
ShadowEffect.Image = "rbxassetid://1316045217"
ShadowEffect.ImageColor3 = Color3.fromRGB(0, 0, 0)
ShadowEffect.ImageTransparency = 0.8
ShadowEffect.ScaleType = Enum.ScaleType.Slice
ShadowEffect.SliceCenter = Rect.new(10, 10, 118, 118)
ShadowEffect.ZIndex = 1
ShadowEffect.Parent = MainFrame

-- Inner stroke
local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.fromRGB(80, 80, 80)
UIStroke.Thickness = 1
UIStroke.Transparency = 0.5
UIStroke.Parent = MainFrame

-- Title bar (for dragging)
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 35)
TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
TitleBar.BackgroundTransparency = 0.2
TitleBar.BorderSizePixel = 0
TitleBar.ZIndex = 3
TitleBar.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = TitleBar

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(1, -50, 1, 0)
TitleLabel.Position = UDim2.new(0, 10, 0, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "Denker Cheat " .. Version
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextSize = 14
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.ZIndex = 3
TitleLabel.Parent = TitleBar

-- Close button
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Position = UDim2.new(1, -30, 0.5, -12)
CloseButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
CloseButton.BackgroundTransparency = 0.3
CloseButton.Text = "√ó"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18
CloseButton.Font = Enum.Font.GothamBold
CloseButton.ZIndex = 3
CloseButton.Parent = TitleBar

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 6)
CloseCorner.Parent = CloseButton

-- ScrollingFrame for scrolling
local ScrollFrame = Instance.new("ScrollingFrame")
ScrollFrame.Name = "ScrollFrame"
ScrollFrame.Size = UDim2.new(1, -20, 1, -45)
ScrollFrame.Position = UDim2.new(0, 10, 0, 40)
ScrollFrame.BackgroundTransparency = 1
ScrollFrame.BorderSizePixel = 0
ScrollFrame.ScrollBarThickness = 6
ScrollFrame.ScrollBarImageColor3 = Color3.fromRGB(120, 120, 120)
ScrollFrame.ScrollBarImageTransparency = 0.5
ScrollFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always
ScrollFrame.ZIndex = 3
ScrollFrame.Parent = MainFrame

-- Container for all buttons inside ScrollingFrame
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 0, 0)
ContentFrame.Position = UDim2.new(0, 0, 0, 0)
ContentFrame.BackgroundTransparency = 1
ContentFrame.ZIndex = 3
ContentFrame.Parent = ScrollFrame

-- UI Controller Module
local DenkerUI = {}

-- Function to update ContentFrame size and CanvasSize
function DenkerUI.updateContentSize()
	local totalHeight = 0

	-- Calculate total height of all elements
	for _, child in ipairs(ContentFrame:GetChildren()) do
		if child:IsA("Frame") then
			totalHeight = totalHeight + child.Size.Y.Offset
		end
	end

	-- Set ContentFrame size and CanvasSize
	ContentFrame.Size = UDim2.new(1, 0, 0, totalHeight)
	ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, totalHeight)
end

-- Function to create dark gray buttons with text on left and ImageLabel on right
function DenkerUI.createExpandableButton(text, positionY)
	local buttonContainer = Instance.new("Frame")
	buttonContainer.Size = UDim2.new(1, 0, 0, 40)
	buttonContainer.Position = UDim2.new(0, 0, 0, positionY)
	buttonContainer.BackgroundTransparency = 1
	buttonContainer.ZIndex = 3
	buttonContainer.Parent = ContentFrame

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, 0, 1, 0)
	button.Position = UDim2.new(0, 0, 0, 0)
	button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	button.BackgroundTransparency = 0.2
	button.Text = "   " .. text
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.TextSize = 13
	button.Font = Enum.Font.Gotham
	button.TextXAlignment = Enum.TextXAlignment.Left
	button.ZIndex = 3
	button.Parent = buttonContainer

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = button

	local stroke = Instance.new("UIStroke")
	stroke.Color = Color3.fromRGB(100, 100, 100)
	stroke.Thickness = 1
	stroke.Transparency = 0.3
	stroke.Parent = button

	-- ImageLabel for right icon
	local imageLabel = Instance.new("ImageLabel")
	imageLabel.Size = UDim2.new(0, 20, 0, 20)
	imageLabel.Position = UDim2.new(1, -30, 0.5, -10)
	imageLabel.BackgroundTransparency = 1
	imageLabel.Image = "rbxassetid://11552476835"
	imageLabel.ZIndex = 3
	imageLabel.Parent = button

	-- Container for expandable content (hidden by default)
	local expandFrame = Instance.new("Frame")
	expandFrame.Size = UDim2.new(1, 0, 0, 0)
	expandFrame.Position = UDim2.new(0, 0, 1, 10)
	expandFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	expandFrame.BackgroundTransparency = 0.1
	expandFrame.BorderSizePixel = 0
	expandFrame.ClipsDescendants = true
	expandFrame.ZIndex = 3
	expandFrame.Visible = false
	expandFrame.Parent = buttonContainer

	local expandCorner = Instance.new("UICorner")
	expandCorner.CornerRadius = UDim.new(0, 6)
	expandCorner.Parent = expandFrame

	local expandStroke = Instance.new("UIStroke")
	expandStroke.Color = Color3.fromRGB(80, 80, 80)
	expandStroke.Thickness = 1
	expandStroke.Transparency = 0.3
	expandStroke.Parent = expandFrame

	return buttonContainer, button, expandFrame, imageLabel
end

-- Function to create Fly button with dropdown content
function DenkerUI.createFlyButton(positionY)
	local buttonContainer, button, expandFrame, imageLabel = DenkerUI.createExpandableButton("üõ∏ Fly System", positionY)

	-- Fly toggle button
	local flyToggleButton = Instance.new("TextButton")
	flyToggleButton.Size = UDim2.new(1, -10, 0, 30)
	flyToggleButton.Position = UDim2.new(0, 5, 0, 5)
	flyToggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	flyToggleButton.BackgroundTransparency = 0.2
	flyToggleButton.Text = "Enable Fly"
	flyToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	flyToggleButton.TextSize = 12
	flyToggleButton.Font = Enum.Font.Gotham
	flyToggleButton.ZIndex = 4
	flyToggleButton.Parent = expandFrame

	local flyToggleCorner = Instance.new("UICorner")
	flyToggleCorner.CornerRadius = UDim.new(0, 4)
	flyToggleCorner.Parent = flyToggleButton

	-- Fly status indicator
	local flyStatusLabel = Instance.new("TextLabel")
	flyStatusLabel.Size = UDim2.new(1, -10, 0, 20)
	flyStatusLabel.Position = UDim2.new(0, 5, 0, 40)
	flyStatusLabel.BackgroundTransparency = 1
	flyStatusLabel.Text = "Status: ‚ùå Disabled"
	flyStatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
	flyStatusLabel.TextSize = 10
	flyStatusLabel.Font = Enum.Font.Gotham
	flyStatusLabel.TextXAlignment = Enum.TextXAlignment.Left
	flyStatusLabel.ZIndex = 4
	flyStatusLabel.Parent = expandFrame

	-- Speed slider
	local speedSliderContainer = Instance.new("Frame")
	speedSliderContainer.Size = UDim2.new(1, -10, 0, 40)
	speedSliderContainer.Position = UDim2.new(0, 5, 0, 65)
	speedSliderContainer.BackgroundTransparency = 1
	speedSliderContainer.ZIndex = 4
	speedSliderContainer.Parent = expandFrame

	local speedLabel = Instance.new("TextLabel")
	speedLabel.Size = UDim2.new(1, 0, 0, 15)
	speedLabel.Position = UDim2.new(0, 0, 0, 0)
	speedLabel.BackgroundTransparency = 1
	speedLabel.Text = "Fly Speed: 1"
	speedLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
	speedLabel.TextSize = 10
	speedLabel.Font = Enum.Font.Gotham
	speedLabel.TextXAlignment = Enum.TextXAlignment.Left
	speedLabel.ZIndex = 4
	speedLabel.Parent = speedSliderContainer

	-- Slider container
	local sliderBackground = Instance.new("Frame")
	sliderBackground.Size = UDim2.new(1, 0, 0, 20)
	sliderBackground.Position = UDim2.new(0, 0, 0, 20)
	sliderBackground.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	sliderBackground.BorderSizePixel = 0
	sliderBackground.ZIndex = 4
	sliderBackground.Parent = speedSliderContainer

	local sliderCorner = Instance.new("UICorner")
	sliderCorner.CornerRadius = UDim.new(0, 4)
	sliderCorner.Parent = sliderBackground

	local sliderFill = Instance.new("Frame")
	sliderFill.Size = UDim2.new(0, 0, 1, 0)
	sliderFill.Position = UDim2.new(0, 0, 0, 0)
	sliderFill.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
	sliderFill.BorderSizePixel = 0
	sliderFill.ZIndex = 5
	sliderFill.Parent = sliderBackground

	local fillCorner = Instance.new("UICorner")
	fillCorner.CornerRadius = UDim.new(0, 4)
	fillCorner.Parent = sliderFill

	local sliderButton = Instance.new("TextButton")
	sliderButton.Size = UDim2.new(1, 0, 1, 0)
	sliderButton.Position = UDim2.new(0, 0, 0, 0)
	sliderButton.BackgroundTransparency = 1
	sliderButton.Text = ""
	sliderButton.ZIndex = 6
	sliderButton.Parent = sliderBackground

	-- Quick adjustment buttons
	local speedControls = Instance.new("Frame")
	speedControls.Size = UDim2.new(1, 0, 0, 15)
	speedControls.Position = UDim2.new(0, 0, 0, 45)
	speedControls.BackgroundTransparency = 1
	speedControls.ZIndex = 4
	speedControls.Parent = speedSliderContainer

	local minusButton = Instance.new("TextButton")
	minusButton.Size = UDim2.new(0, 20, 1, 0)
	minusButton.Position = UDim2.new(0, 0, 0, 0)
	minusButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	minusButton.BackgroundTransparency = 0.3
	minusButton.Text = "-"
	minusButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	minusButton.TextSize = 12
	minusButton.Font = Enum.Font.GothamBold
	minusButton.ZIndex = 4
	minusButton.Parent = speedControls

	local minusCorner = Instance.new("UICorner")
	minusCorner.CornerRadius = UDim.new(0, 3)
	minusCorner.Parent = minusButton

	local plusButton = Instance.new("TextButton")
	plusButton.Size = UDim2.new(0, 20, 1, 0)
	plusButton.Position = UDim2.new(1, -20, 0, 0)
	plusButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	plusButton.BackgroundTransparency = 0.3
	plusButton.Text = "+"
	plusButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	plusButton.TextSize = 12
	plusButton.Font = Enum.Font.GothamBold
	plusButton.ZIndex = 4
	plusButton.Parent = speedControls

	local plusCorner = Instance.new("UICorner")
	plusCorner.CornerRadius = UDim.new(0, 3)
	plusCorner.Parent = plusButton

	return buttonContainer, button, expandFrame, imageLabel, flyToggleButton, flyStatusLabel, speedLabel, sliderFill, sliderButton, minusButton, plusButton
end

-- Function to create simple ESP button (without dropdown)
function DenkerUI.createSimpleESPButton(positionY)
	local buttonContainer = Instance.new("Frame")
	buttonContainer.Size = UDim2.new(1, 0, 0, 40)
	buttonContainer.Position = UDim2.new(0, 0, 0, positionY)
	buttonContainer.BackgroundTransparency = 1
	buttonContainer.ZIndex = 3
	buttonContainer.Parent = ContentFrame

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, 0, 1, 0)
	button.Position = UDim2.new(0, 0, 0, 0)
	button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	button.BackgroundTransparency = 0.2
	button.Text = "   üéØ ESP: Disabled"
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.TextSize = 13
	button.Font = Enum.Font.Gotham
	button.TextXAlignment = Enum.TextXAlignment.Left
	button.ZIndex = 3
	button.Parent = buttonContainer

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = button

	local stroke = Instance.new("UIStroke")
	stroke.Color = Color3.fromRGB(100, 100, 100)
	stroke.Thickness = 1
	stroke.Transparency = 0.3
	stroke.Parent = button

	return buttonContainer, button
end

-- Function to create simple Noclip button (without dropdown)
function DenkerUI.createSimpleNoclipButton(positionY)
	local buttonContainer = Instance.new("Frame")
	buttonContainer.Size = UDim2.new(1, 0, 0, 40)
	buttonContainer.Position = UDim2.new(0, 0, 0, positionY)
	buttonContainer.BackgroundTransparency = 1
	buttonContainer.ZIndex = 3
	buttonContainer.Parent = ContentFrame

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, 0, 1, 0)
	button.Position = UDim2.new(0, 0, 0, 0)
	button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	button.BackgroundTransparency = 0.2
	button.Text = "   üö´ Noclip: Disabled"
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.TextSize = 13
	button.Font = Enum.Font.Gotham
	button.TextXAlignment = Enum.TextXAlignment.Left
	button.ZIndex = 3
	button.Parent = buttonContainer

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = button

	local stroke = Instance.new("UIStroke")
	stroke.Color = Color3.fromRGB(100, 100, 100)
	stroke.Thickness = 1
	stroke.Transparency = 0.3
	stroke.Parent = button

	return buttonContainer, button
end

-- Function for fixed button animation
function DenkerUI.safeAnimateButton(button)
	if button:GetAttribute("Animating") then return end
	button:SetAttribute("Animating", true)

	local originalSize = button.Size
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	local shrinkTween = TweenService:Create(button, tweenInfo, {Size = originalSize - UDim2.new(0, 3, 0, 3)})
	local growTween = TweenService:Create(button, tweenInfo, {Size = originalSize})

	shrinkTween:Play()
	shrinkTween.Completed:Connect(function()
		growTween:Play()
		growTween.Completed:Connect(function()
			button:SetAttribute("Animating", false)
		end)
	end)
end

-- Hover animation for dark gray buttons
function DenkerUI.setupDarkGrayHoverEffects(button)
	local originalTransparency = button.BackgroundTransparency

	button.MouseEnter:Connect(function()
		if button:GetAttribute("Animating") then return end
		local tween = TweenService:Create(button, TweenInfo.new(0.2), {
			BackgroundColor3 = Color3.fromRGB(80, 80, 80),
			BackgroundTransparency = originalTransparency - 0.1
		})
		tween:Play()
	end)

	button.MouseLeave:Connect(function()
		if button:GetAttribute("Animating") then return end
		local tween = TweenService:Create(button, TweenInfo.new(0.2), {
			BackgroundColor3 = Color3.fromRGB(60, 60, 60),
			BackgroundTransparency = originalTransparency
		})
		tween:Play()
	end)
end

-- Function for icon animation (rotation)
function DenkerUI.animateIcon(imageLabel, expand)
	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	if expand then
		local tween = TweenService:Create(imageLabel, tweenInfo, {
			Rotation = 180
		})
		tween:Play()
	else
		local tween = TweenService:Create(imageLabel, tweenInfo, {
			Rotation = 0
		})
		tween:Play()
	end
end

-- WINDOW DRAGGING FUNCTION
function DenkerUI.setupWindowDrag(titleBar, mainFrame)
	local dragging = false
	local dragInput, dragStart, startPos

	local function update(input)
		local delta = input.Position - dragStart
		mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	titleBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = mainFrame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	titleBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

-- Opening animation
function DenkerUI.show()
	MainFrame.Size = UDim2.new(0, 0, 0, 0)
	MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	MainFrame.BackgroundTransparency = 1

	local openTween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
		Size = UDim2.new(0, 300, 0, 250),
		Position = UDim2.new(0.5, -150, 0.5, -125),
		BackgroundTransparency = 0.3
	})
	openTween:Play()
end

function DenkerUI.close()
	local tween = TweenService:Create(MainFrame, TweenInfo.new(0.3), {
		Size = UDim2.new(0, 0, 0, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		BackgroundTransparency = 1
	})
	tween:Play()

	tween.Completed:Wait()
	ScreenGui:Destroy()
end

-- Export UI elements for functionality script
DenkerUI.MainFrame = MainFrame
DenkerUI.TitleBar = TitleBar
DenkerUI.CloseButton = CloseButton
DenkerUI.ContentFrame = ContentFrame
DenkerUI.ScrollFrame = ScrollFrame

return DenkerUI
